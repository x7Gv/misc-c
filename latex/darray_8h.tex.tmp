\hypertarget{darray_8h}{}\section{darray.\+h File Reference}
\label{darray_8h}\index{darray.\+h@{darray.\+h}}


Header definitions and a public interface for \hyperlink{structd__arr}{d\+\_\+arr}.  


{\ttfamily \#include $<$stdlib.\+h$>$}\newline
Include dependency graph for darray.\+h\+:
% FIG 0
\subsection*{Classes}
\begin{DoxyCompactItemize}
\item 
struct \hyperlink{structd__arr}{d\+\_\+arr}
\begin{DoxyCompactList}\small\item\em Main structure for a \hyperlink{structd__arr}{d\+\_\+arr} \textquotesingle{}object\textquotesingle{}. \end{DoxyCompactList}\end{DoxyCompactItemize}
\subsection*{Macros}
\begin{DoxyCompactItemize}
\item 
\mbox{\Hypertarget{darray_8h_a2ea5df2860926621fa4fa3bf46952ed0}\label{darray_8h_a2ea5df2860926621fa4fa3bf46952ed0}} 
\#define {\bfseries A\+R\+R\+\_\+\+I\+N\+I\+T\+I\+A\+L\+\_\+\+C\+A\+P\+A\+C\+I\+TY}~128
\end{DoxyCompactItemize}
\subsection*{Typedefs}
\begin{DoxyCompactItemize}
\item 
typedef struct \hyperlink{structd__arr}{d\+\_\+arr} \hyperlink{darray_8h_acc2a71cc7725f909e0b84e72dbd8251f}{d\+\_\+arr}
\begin{DoxyCompactList}\small\item\em Main structure for a \hyperlink{structd__arr}{d\+\_\+arr} \textquotesingle{}object\textquotesingle{}. \end{DoxyCompactList}\end{DoxyCompactItemize}
\subsection*{Functions}
\begin{DoxyCompactItemize}
\item 
void \hyperlink{darray_8h_a1c934c69583726c343498777805aee72}{arr\+\_\+init} (\hyperlink{structd__arr}{d\+\_\+arr} $\ast$arr, size\+\_\+t node\+\_\+size)
\begin{DoxyCompactList}\small\item\em Initialize the array. \end{DoxyCompactList}\item 
void \hyperlink{darray_8h_a36f8c66bcefdf40595fe5ee5e9fddcb9}{arr\+\_\+append} (\hyperlink{structd__arr}{d\+\_\+arr} $\ast$arr, void $\ast$node)
\begin{DoxyCompactList}\small\item\em Append a node of data to the tail of array. \end{DoxyCompactList}\item 
void \hyperlink{darray_8h_a5b5ef8f15921bb46436c129b9e4668b1}{arr\+\_\+get} (\hyperlink{structd__arr}{d\+\_\+arr} $\ast$arr, int index, void $\ast$dest)
\begin{DoxyCompactList}\small\item\em Get data from the array by an index. \end{DoxyCompactList}\item 
void \hyperlink{darray_8h_a03366c28c50440311ac7450bc28475b2}{arr\+\_\+set} (\hyperlink{structd__arr}{d\+\_\+arr} $\ast$arr, int index, void $\ast$node)
\begin{DoxyCompactList}\small\item\em Set node of data to the given index in the array. \end{DoxyCompactList}\item 
void \hyperlink{darray_8h_a73bb409e5caf200c13c1e6cfc620fd1e}{arr\+\_\+free} (\hyperlink{structd__arr}{d\+\_\+arr} $\ast$arr)
\begin{DoxyCompactList}\small\item\em Free up memory allocated to the array. \end{DoxyCompactList}\end{DoxyCompactItemize}


\subsection{Detailed Description}
Header definitions and a public interface for \hyperlink{structd__arr}{d\+\_\+arr}. 

\begin{DoxyAuthor}{Author}
Oskari J. Manninen $<$7\+Gv$>$ 
\end{DoxyAuthor}
\begin{DoxyDate}{Date}
20 Aug 2019 
\end{DoxyDate}


\subsection{Typedef Documentation}
\mbox{\Hypertarget{darray_8h_acc2a71cc7725f909e0b84e72dbd8251f}\label{darray_8h_acc2a71cc7725f909e0b84e72dbd8251f}} 
\index{darray.\+h@{darray.\+h}!d\+\_\+arr@{d\+\_\+arr}}
\index{d\+\_\+arr@{d\+\_\+arr}!darray.\+h@{darray.\+h}}
\subsubsection{\texorpdfstring{d\+\_\+arr}{d\_arr}}
{\footnotesize\ttfamily typedef struct \hyperlink{structd__arr}{d\+\_\+arr}  \hyperlink{structd__arr}{d\+\_\+arr}}



Main structure for a \hyperlink{structd__arr}{d\+\_\+arr} \textquotesingle{}object\textquotesingle{}. 

Every functionality \hyperlink{structd__arr}{d\+\_\+arr} serves will be refereced by this struct. 

\subsection{Function Documentation}
\mbox{\Hypertarget{darray_8h_a36f8c66bcefdf40595fe5ee5e9fddcb9}\label{darray_8h_a36f8c66bcefdf40595fe5ee5e9fddcb9}} 
\index{darray.\+h@{darray.\+h}!arr\+\_\+append@{arr\+\_\+append}}
\index{arr\+\_\+append@{arr\+\_\+append}!darray.\+h@{darray.\+h}}
\subsubsection{\texorpdfstring{arr\+\_\+append()}{arr\_append()}}
{\footnotesize\ttfamily void arr\+\_\+append (\begin{DoxyParamCaption}\item[{\hyperlink{structd__arr}{d\+\_\+arr} $\ast$}]{arr,  }\item[{void $\ast$}]{node }\end{DoxyParamCaption})}



Append a node of data to the tail of array. 


\begin{DoxyParams}{Parameters}
{\em arr} & Reference pointer to the associated array-\/struct. \\
\hline
{\em node} & The node to be appended. \\
\hline
\end{DoxyParams}
\mbox{\Hypertarget{darray_8h_a73bb409e5caf200c13c1e6cfc620fd1e}\label{darray_8h_a73bb409e5caf200c13c1e6cfc620fd1e}} 
\index{darray.\+h@{darray.\+h}!arr\+\_\+free@{arr\+\_\+free}}
\index{arr\+\_\+free@{arr\+\_\+free}!darray.\+h@{darray.\+h}}
\subsubsection{\texorpdfstring{arr\+\_\+free()}{arr\_free()}}
{\footnotesize\ttfamily void arr\+\_\+free (\begin{DoxyParamCaption}\item[{\hyperlink{structd__arr}{d\+\_\+arr} $\ast$}]{arr }\end{DoxyParamCaption})}



Free up memory allocated to the array. 


\begin{DoxyParams}{Parameters}
{\em arr} & Reference pointer to the associated array-\/struct. \\
\hline
\end{DoxyParams}
\mbox{\Hypertarget{darray_8h_a5b5ef8f15921bb46436c129b9e4668b1}\label{darray_8h_a5b5ef8f15921bb46436c129b9e4668b1}} 
\index{darray.\+h@{darray.\+h}!arr\+\_\+get@{arr\+\_\+get}}
\index{arr\+\_\+get@{arr\+\_\+get}!darray.\+h@{darray.\+h}}
\subsubsection{\texorpdfstring{arr\+\_\+get()}{arr\_get()}}
{\footnotesize\ttfamily void arr\+\_\+get (\begin{DoxyParamCaption}\item[{\hyperlink{structd__arr}{d\+\_\+arr} $\ast$}]{arr,  }\item[{int}]{index,  }\item[{void $\ast$}]{dest }\end{DoxyParamCaption})}



Get data from the array by an index. 


\begin{DoxyParams}[1]{Parameters}
 & {\em arr} & Reference pointer to the associated array-\/struct. \\
\hline
\mbox{\tt in}  & {\em index} & The index \\
\hline
\mbox{\tt out}  & {\em dest} & The destination \\
\hline
\end{DoxyParams}
\mbox{\Hypertarget{darray_8h_a1c934c69583726c343498777805aee72}\label{darray_8h_a1c934c69583726c343498777805aee72}} 
\index{darray.\+h@{darray.\+h}!arr\+\_\+init@{arr\+\_\+init}}
\index{arr\+\_\+init@{arr\+\_\+init}!darray.\+h@{darray.\+h}}
\subsubsection{\texorpdfstring{arr\+\_\+init()}{arr\_init()}}
{\footnotesize\ttfamily void arr\+\_\+init (\begin{DoxyParamCaption}\item[{\hyperlink{structd__arr}{d\+\_\+arr} $\ast$}]{arr,  }\item[{size\+\_\+t}]{node\+\_\+size }\end{DoxyParamCaption})}



Initialize the array. 


\begin{DoxyParams}[1]{Parameters}
 & {\em arr} & Reference pointer to the associated array-\/struct. \\
\hline
\mbox{\tt in}  & {\em node\+\_\+size} & The node size \\
\hline
\end{DoxyParams}
\mbox{\Hypertarget{darray_8h_a03366c28c50440311ac7450bc28475b2}\label{darray_8h_a03366c28c50440311ac7450bc28475b2}} 
\index{darray.\+h@{darray.\+h}!arr\+\_\+set@{arr\+\_\+set}}
\index{arr\+\_\+set@{arr\+\_\+set}!darray.\+h@{darray.\+h}}
\subsubsection{\texorpdfstring{arr\+\_\+set()}{arr\_set()}}
{\footnotesize\ttfamily void arr\+\_\+set (\begin{DoxyParamCaption}\item[{\hyperlink{structd__arr}{d\+\_\+arr} $\ast$}]{arr,  }\item[{int}]{index,  }\item[{void $\ast$}]{node }\end{DoxyParamCaption})}



Set node of data to the given index in the array. 


\begin{DoxyParams}[1]{Parameters}
 & {\em arr} & Reference pointer to the associated array-\/struct. \\
\hline
\mbox{\tt in}  & {\em index} & The index of array \\
\hline
 & {\em node} & The node to be set \\
\hline
\end{DoxyParams}
